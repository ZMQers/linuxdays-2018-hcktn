/*  =========================================================================
    hello - class description

    Copyright (c) the Authors
    =========================================================================
*/

#ifndef HELLO_H_INCLUDED
#define HELLO_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/hello.api" to make changes.
//  @interface
//  This is a stable class, and may not change except for emergencies. It
//  is provided in stable builds.
#define HELLO_OK 1                          //
#define HELLO_ERROR 2                       //
#define HELLO_HELLO 3                       //

//  Create a new empty hello
RFC_HELLO_EXPORT hello_t *
    hello_new (void);

//  Create a new hello from zpl/zconfig_t *
RFC_HELLO_EXPORT hello_t *
    hello_new_zpl (zconfig_t *config);

//  Destroy a hello instance
RFC_HELLO_EXPORT void
    hello_destroy (hello_t **self_p);

//  Create a deep copy of a hello instance
//  Caller owns return value and must destroy it when done.
RFC_HELLO_EXPORT hello_t *
    hello_dup (hello_t *self);

//  Receive a hello from the socket. Returns 0 if OK, -1 if
//  there was an error. Blocks if there is no message waiting.
RFC_HELLO_EXPORT int
    hello_recv (hello_t *self, zsock_t *input);

//  Send the hello to the output socket, does not destroy it
RFC_HELLO_EXPORT int
    hello_send (hello_t *self, zsock_t *output);

//  Print contents of message to stdout
RFC_HELLO_EXPORT void
    hello_print (hello_t *self);

//  Export class as zconfig_t*. Caller is responsibe for destroying the instance
//  Caller owns return value and must destroy it when done.
RFC_HELLO_EXPORT zconfig_t *
    hello_zpl (hello_t *self, zconfig_t *parent);

//  Get the message routing id, as a frame
RFC_HELLO_EXPORT zframe_t *
    hello_routing_id (hello_t *self);

//  Set the message routing id from a frame
RFC_HELLO_EXPORT void
    hello_set_routing_id (hello_t *self, zframe_t *routing_id);

//  Get the hello message id
RFC_HELLO_EXPORT int
    hello_id (hello_t *self);

//  Set the hello message id
RFC_HELLO_EXPORT void
    hello_set_id (hello_t *self, int id);

//  Get the hello message id as printable text
RFC_HELLO_EXPORT const char *
    hello_command (hello_t *self);

//  Get the reason field
RFC_HELLO_EXPORT const char *
    hello_reason (hello_t *self);

//  Set the reason field
RFC_HELLO_EXPORT void
    hello_set_reason (hello_t *self, const char *reason);

//  Self test of this class.
RFC_HELLO_EXPORT void
    hello_test (bool verbose);

//  @end

#ifdef __cplusplus
}
#endif

#endif
